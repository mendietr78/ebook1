<%- include ('partials/_header'); %>

<!-- eBook Container -->
<div class="ebook-container">
    <div class="ebook-header text-center">
        <h2>Visualizar eBook</h2>
        <h1 class="ebook-title"><%= data && data.co1 %> <%= data && data.pg1 %></h1>
    </div>

    <div class="ebook-content">
        <div class="ebook-page">
            <div id="readable-content" class="ebook-text">
                <%= data && data.co2 %>
            </div>
        </div>
    </div>

    <div class="ebook-controls">
        <button class="btn btn-primary" onclick="adjustFontSize('increase')">Aumentar texto</button>
        <button class="btn btn-secondary" onclick="adjustFontSize('decrease')">Disminuir texto</button>
        <button class="btn btn-dark" onclick="toggleDarkMode()">Modo oscuro</button>
        <button id="readBtn" class="btn btn-success" onclick="readAloud()">Leer en voz alta</button>
        <button id="stopBtn" class="btn btn-danger" onclick="stopReading()" style="display: none;">Detener lectura</button>
        <button id="readBtn" class="btn btn-success" onclick="readAloud()">Leer en voz alta</button>
<button id="pauseBtn" class="btn btn-warning" onclick="pauseReading()" style="display: none;">Pausar</button>
<button id="resumeBtn" class="btn btn-info" onclick="resumeReading()" style="display: none;">Reanudar</button>
<button id="stopBtn" class="btn btn-danger" onclick="stopReading()" style="display: none;">Detener</button>

    </div>
</div>

<style>
    .ebook-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Georgia', serif;
        line-height: 1.6;
    }

    .ebook-header {
        margin-bottom: 30px;
    }

    .ebook-title {
        font-size: 2rem;
        color: #333;
        margin-bottom: 20px;
    }

    .ebook-content {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        min-height: 60vh;
        white-space: pre-wrap;
    }

    .ebook-text {
        font-size: 1.1rem;
        text-align: justify;
        hyphens: auto;
    }

    .ebook-controls {
        margin-top: 20px;
        display: flex;
        justify-content: center;
        gap: 10px;
        flex-wrap: wrap;
    }

    .dark-mode {
        background-color: #222;
        color: #eee;
    }

    .dark-mode .ebook-content {
        background-color: #333;
        border-color: #444;
    }

    .dark-mode .ebook-title {
        color: #eee;
    }

    .highlight {
        background-color: yellow;
        font-weight: bold;
    }

    @media (max-width: 768px) {
        .ebook-container {
            padding: 10px;
        }
        .ebook-content {
            padding: 15px;
        }
        .ebook-title {
            font-size: 1.5rem;
        }
        .ebook-text {
            font-size: 1rem;
        }
    }
</style>

<script>
    // Aumentar / Disminuir tamaÃ±o de fuente
    function adjustFontSize(action) {
        const textElement = document.querySelector('.ebook-text');
        let currentSize = parseFloat(window.getComputedStyle(textElement).fontSize);

        if (action === 'increase') {
            textElement.style.fontSize = (currentSize + 2) + 'px';
        } else if (currentSize > 12) {
            textElement.style.fontSize = (currentSize - 2) + 'px';
        }
    }

    // Modo oscuro
    function toggleDarkMode() {
        document.body.classList.toggle('dark-mode');
    }

    // Lectura en voz alta con resaltado
    let speechSynthesisObj = window.speechSynthesis;
    let utterance = null;
    let originalContent = '';

    function readAloud() {
        const content = document.getElementById('readable-content');
        originalContent = content.innerHTML;

        stopReading(); // Detener si ya hay algo leyendo

        utterance = new SpeechSynthesisUtterance(content.textContent);
        utterance.lang = 'es-ES';
        utterance.rate = 1.0;
        utterance.pitch = 1.0;

        utterance.onstart = () => {
            document.getElementById('readBtn').style.display = 'none';
            document.getElementById('stopBtn').style.display = 'inline-block';
        };

        utterance.onend = () => {
            document.getElementById('readBtn').style.display = 'inline-block';
            document.getElementById('stopBtn').style.display = 'none';
            content.innerHTML = originalContent;
        };

        utterance.onboundary = (event) => {
            if (event.name === 'word') {
                const text = content.textContent;
                const wordStart = event.charIndex;
                let wordEnd = wordStart;

                while (wordEnd < text.length && !/\s/.test(text[wordEnd])) {
                    wordEnd++;
                }

                const word = text.substring(wordStart, wordEnd);
                if (word.length > 0) {
                    const safeWord = word.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // escape regex
                    const newContent = originalContent.replace(
                        new RegExp(`\\b${safeWord}\\b`, 'g'),
                        `<span class="highlight">${word}</span>`
                    );
                    content.innerHTML = newContent;
                }
            }
        };

        speechSynthesisObj.speak(utterance);
    }

    function stopReading() {
        if (speechSynthesisObj.speaking) {
            speechSynthesisObj.cancel();
            document.getElementById('readBtn').style.display = 'inline-block';
            document.getElementById('stopBtn').style.display = 'none';

            const content = document.getElementById('readable-content');
            if (originalContent) {
                content.innerHTML = originalContent;
            }
        }
    }
</script>

<%- include ('partials/_footer'); %>
